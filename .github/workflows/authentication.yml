name: CI/CD for AuthenticationService

on:
  push:
    branches:
      - main  # Run workflow on main branch push
  pull_request:
    branches:
      - main  # Run workflow on PR merge to main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the Repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set Up Java (JDK 17)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 3: Grant Execute Permissions & Build
      - name: Build and Package Application
        run: |
          cd AuthenticationService/AuthenticationService
          chmod +x mvnw  # Fix permission issue
          ./mvnw clean package -DskipTests  # Skip tests for faster build

      # Step 4: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 5: Build Docker Image Locally
      - name: Build Docker Image
        run: |
          cd AuthenticationService/AuthenticationService  # Correct directory for Dockerfile
          docker build -t auth-service .  # The Dockerfile should be in this directory

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Deploy only after a successful build

    steps:
      # Step 1: Checkout the Repository Again
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set Up SSH for Secure Connection
      - name: Set Up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC21_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC21_PUBLIC_IP }} >> ~/.ssh/known_hosts

      # Step 3: Install bzip2 on EC2
      - name: Install bzip2 on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC21_PUBLIC_IP }} << 'EOF'
            sudo apt-get update
            sudo apt-get install -y bzip2
          EOF

      # Step 4: Transfer Docker Image to EC2
      - name: Transfer Docker Image to EC2
        run: |
          docker save auth-service | bzip2 | ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC21_PUBLIC_IP }} 'bunzip2 | docker load'

      # Step 5: Deploy and Restart Docker Container on EC2
      - name: Deploy and Restart Docker Container
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC21_PUBLIC_IP }} << 'EOF'
            # Stop and remove existing container
            docker stop auth-container || true
            docker rm auth-container || true

            # Run new Docker container
            docker run -d -p 8080:8080 --name auth-container \
              --restart unless-stopped \
              auth-service
          EOF
