
1Ô∏è‚É£ Add a New Category
Endpoint: POST /categories
 
     
Body (JSON):
{
    "name": "Electronics"
}
Expected Response:
    201 Created
    Returns the created category object.

2Ô∏è‚É£ Get All Categories
Endpoint: GET /categories
Expected Response:
    200 OK
    Returns an array of categories.

3Ô∏è‚É£ Add a New Product
Endpoint: POST /products
 
     
Body (JSON):
{
    "name": "Laptop",
    "description": "Gaming laptop",
    "price": 1500,
    "category": "CATEGORY_ID",
    "stock": 20,
    "sellerId": "SELLER_123"
}
Replace CATEGORY_ID with an actual Category ID from the database.
Expected Response:
    201 Created
    Returns the created product object.

4Ô∏è‚É£ Get All Product Categories
Endpoint: GET /products/categories
Expected Response:
    200 OK
    Returns an array of distinct category IDs.

5Ô∏è‚É£ Get Product Details by ID
Endpoint: GET /products/:id
Replace :id with a Product ID.
Expected Response:
    200 OK
    Returns the product details with category and reviews.

6Ô∏è‚É£ Update Product Details
Endpoint: PUT /products/:id
Replace :id with a Product ID.
 
     
Body (JSON):
{
    "price": 1400,
    "stock": 15
}
Expected Response:
    200 OK
    Returns the updated product.

7Ô∏è‚É£ Delete a Product by ID
Endpoint: DELETE /products/:id
Replace :id with a Product ID.
Expected Response:
    200 OK
    Returns { "message": "Product deleted successfully" }.

8Ô∏è‚É£ Add a Review for a Product
Endpoint: POST /products/:id/review
Replace :id with a Product ID.
 
     
Body (JSON):
{
    "userId": "USER_001",
    "rating": 5,
    "comment": "Amazing product!"
}
Expected Response:
    201 Created
    Returns the review object.

9Ô∏è‚É£ Get All Reviews for a Product
Endpoint: GET /products/:id/reviews
Replace :id with a Product ID.
Expected Response:
    200 OK
    Returns an array of reviews.

üîü Update a Specific Review
Endpoint: PUT /products/:productId/reviews/:reviewId
Replace :productId with a Product ID and :reviewId with a Review ID.
 
     
Body (JSON):
{
    "rating": 4,
    "comment": "Good product but expensive"
}
Expected Response:
    200 OK
    Returns the updated product with modified review.

1Ô∏è‚É£1Ô∏è‚É£ Delete a Specific Review
Endpoint: DELETE /products/:productId/reviews/:reviewId
Replace :productId and :reviewId with actual IDs.
Expected Response:
    200 OK
    Returns { "message": "Review deleted successfully" }.

1Ô∏è‚É£2Ô∏è‚É£ Get All Products Added by a Seller
Endpoint: GET /products/seller/:id
Replace :id with a Seller ID.
Expected Response:
    200 OK
    Returns an array of products from the seller.

1Ô∏è‚É£3Ô∏è‚É£ Get All Products with Pagination
Endpoint: GET /products?page=1&limit=5
Expected Response:
    200 OK
    Returns a paginated list of products.

1Ô∏è‚É£4Ô∏è‚É£ Update Stock Quantity for a Product
Endpoint: PATCH /products/:id/stock
Replace :id with a Product ID.
 
     
Body (JSON):
{
    "stock": 30
}
Expected Response:
    200 OK
    Returns the updated product with new stock value.
